user  nginx;  # ผู้ใช้งาน nginx
worker_processes  1;  # จำนวนของ worker process
error_log  /var/log/nginx/error.log warn;  # ตำแหน่งของไฟล์ log ของ error
pid        /var/run/nginx.pid;  # ตำแหน่งของไฟล์ pid

events {
  worker_connections  1024;  # จำนวนของ connection สูงสุดที่แต่ละ worker process สามารถ handle ได้
}

http {
  include       /etc/nginx/mime.types;  # รวม mime types
  default_type  application/octet-stream;  # กำหนด default mime type

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';  # รูปแบบของ log

  access_log  /var/log/nginx/access.log  main;  # ตำแหน่งของไฟล์ log ของ access

  sendfile        on;  # เปิดใช้งานการส่งไฟล์
  keepalive_timeout  65;  # กำหนด timeout สำหรับ keepalive connections

  # เปิดใช้งาน Gzip compression
  gzip on;
  gzip_disable "msie6";
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  server {
    listen       80;  # กำหนด port ที่ server จะ listen
    server_name  localhost;  # กำหนดชื่อของ server

    location / {
      root   /app;  # ตำแหน่ง root directory สำหรับ request
      index  index.html;  # กำหนดไฟล์ index
      try_files $uri $uri/ /index.html;  # ลำดับของการค้นหาไฟล์

      # ตั้งค่า caching
      expires 30d;
      add_header Pragma "public";
      add_header Cache-Control "public";
    }

    # location /api {
    #   proxy_pass http://appbackend:8080;  # ส่งต่อ request ไปยัง backend server
    # }

    error_page   500 502 503 504  /50x.html;  # กำหนดหน้า error
    location = /50x.html {
      root   /usr/share/nginx/html;  # ตำแหน่งของหน้า error
    }
  }
}